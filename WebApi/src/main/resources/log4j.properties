#日志输出级别,目的地
log4j.rootLogger=debug,stdout,D,E  

#设置stdout的日志输出控制台  
log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
#输出日志到控制台的方式，默认为System.out  
log4j.appender.stdout.Target = System.out  
#设置使用灵活布局  
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式  
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} -[%p]  method:[%c (%rms)] - %m%n  

### 输出DEBUG 级别以上的日志到=../logs/debug ###
#每天产生一个日志文件  
log4j.appender.D=org.apache.log4j.DailyRollingFileAppender  
#设置的输出日志 相对路径法:将日志记录到tomcat下的logs文件夹
log4j.appender.D.File=../logs/debug/debug.txt
#使用环境变量相对路径法：${webApp.root}对应当前应用根目录
#log4j.appender.D.File=${helpyou.root}/logs/debug.log

#设置的日志最大限制  
log4j.appender.D.MaxFileSize=6000KB  
#最多只保存20个备份文件  
log4j.appender.D.MaxBackupIndex=20  
#输出DEBUG级别以上的日志
og4j.appender.D.Threshold=debug  
log4j.appender.D.Append = true  
log4j.appender.D.ImmediateFlush = true  
#每天产生一个新的日志文件
log4j.appender.D.DatePattern ='.'yyyy-MM-dd  
#每月产生一个新的日志文件
#log4j.appender.D.DatePattern ='.'yyyy-MM

#设置使用灵活布局  
log4j.appender.D.layout=org.apache.log4j.PatternLayout  
#灵活定义输出格式  
log4j.appender.D.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} -[%p]  method:[%l (%rms)] - %m%n  

### 输出ERROR级别以上的日志到=../logs/error ###
#每天产生一个日志文件
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender  
log4j.appender.E.File =../logs/error/error.txt
#log4j.appender.E.File=${helpyou.root}/logs/error.log
log4j.appender.E.Append = true  
log4j.appender.E.Threshold = ERROR  
log4j.appender.E.DatePattern = '_'yyyyMMdd'.log'  
log4j.appender.E.layout = org.apache.log4j.PatternLayout  
log4j.appender.E.layout.ConversionPattern = %d{yyyy-MM-dd HH:mm:ss,SSS} -[%p]  method:[%l (%rms)] - %m%n